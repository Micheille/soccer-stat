{"version":3,"sources":["components/header.jsx","components/yearlinks/yearlinks_competitions.jsx","components/tables/table_competitions.jsx","components/competitions.jsx","components/yearlinks/yearlinks_teams.jsx","components/tables/table_teams.jsx","components/teams.jsx","components/yearlinks/yearlinks_team.jsx","components/tables/table_team.jsx","components/form_dates.jsx","components/team.jsx","components/yearlinks/yearlinks_competition.jsx","components/tables/table_competition.jsx","components/competition.jsx","components/container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","YearLinksCompetitions","Links","push","to","i","TableCompetitions","props","filtered","state","competitions","slice","isLoaded","error","year","q","URLSearchParams","search","get","filter","competition","currentSeason","Date","endDate","getFullYear","startDate","startYear","endYear","name","includes","length","cellSpacing","map","index","area","id","Competitions","gettingCompetitions","e","a","url","URL","headers","API_KEY","fetch","response","json","data","ok","setState","sorted","sort","b","aDate","date","message","localStorage","getItem","this","htmlFor","type","placeholder","match","params","location","YearLinksTeams","href","TableTeams","teams","team","venue","website","Teams","gettingTeams","id_param","year_param","url_competition","response_comp","data_comp","YearLinksTeam","TableTeam","matches","utcDate","toLocaleString","homeTeam","awayTeam","status","score","winner","FormDates","required","Team","gettingMatches","url_team","response_team","data_team","YearLinksCompetition","TableCompetition","Competition","search_param","Container","basename","defaultValue","onClick","clear","setItem","document","getElementById","value","reload","exact","path","component","from","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb832247.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return <div className=\"header\">\r\n                    <h1>SoccerStat</h1>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst YearLinksCompetitions = () => {\r\n    const Links = [];\r\n    Links.push(<li key=\"all\"><NavLink to={`/сompetitions`}>All seasons</NavLink></li>);\r\n    for (let i = 2021; i > 2014; i--)\r\n        Links.push(<li key={i}><NavLink to={`/сompetitions/${i}`}>{i}</NavLink></li>);\r\n    Links.push(<li key=\"earlier\"><NavLink to={`/сompetitions/earlier`} key=\"earlier\">Until 2014</NavLink></li>);\r\n\r\n    return <ul className=\"year-links\">{Links}</ul>;\r\n}\r\n\r\nexport default YearLinksCompetitions;","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TableCompetitions = (props) => {\r\n    let filtered = props.state.competitions.slice();\r\n    const isLoaded = props.state.isLoaded;\r\n    const error = props.state.error;\r\n    const year = props.year;\r\n    const params = new URLSearchParams(props.search);\r\n    const q = params.get('q');\r\n\r\n    if (year) { //year filtration\r\n        if (year === 'earlier') {\r\n            filtered = props.state.competitions.filter(competition => {\r\n                const endDate = competition.currentSeason? new Date(competition.currentSeason.endDate) : new Date(2000);\r\n                const endYear = endDate.getFullYear();\r\n\r\n                return (endYear <= 2014);\r\n            });   \r\n        }\r\n        else filtered = props.state.competitions.filter(competition => {\r\n            const startDate = competition.currentSeason? new Date(competition.currentSeason.startDate) : new Date(2000);\r\n            const endDate = competition.currentSeason? new Date(competition.currentSeason.endDate) : new Date(2000);\r\n            const startYear = startDate.getFullYear();\r\n            const endYear = endDate.getFullYear();\r\n\r\n            return (year >= startYear && year <= endYear);\r\n        });\r\n    }\r\n\r\n    if (q) { // search query filtration\r\n        filtered = props.state.competitions.filter(competition => competition.name.includes(q));\r\n    }\r\n\r\n    if (error)\r\n        return <div>{`An error occured: ${error}`}</div>;\r\n    if (!isLoaded) {\r\n        return <div>Loading...<br/>Try to reload in minute if stays. If doesn't work, check your API token.</div>;\r\n    } else if (filtered.length) \r\n        return (\r\n            <table cellSpacing=\"0\" className=\"table\">\r\n                <thead>\r\n                    <tr key=\"th-row\">\r\n                        <th>№</th>\r\n                        <th>Area</th>\r\n                        <th>Name</th>\r\n                        <th>Start Date</th>\r\n                        <th>End Date</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {filtered.map((competition, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{competition.area.name}</td>\r\n                            <td>\r\n                                <span>{competition.name}</span>\r\n                                <br/>\r\n                                <NavLink to={`/teams/${competition.id}`}>Teams</NavLink>\r\n                                <NavLink to={`/competition/${competition.id}`}>Calendar</NavLink>\r\n                            </td>\r\n                            <td>{competition.currentSeason?.startDate ?? \"-\"}</td>\r\n                            <td>{competition.currentSeason?.endDate ?? \"-\"}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    else return <div>No information with parameters given.</div>\r\n}\r\n\r\nexport default TableCompetitions;","import React from \"react\";\r\nimport YearLinksCompetitions from \"./yearlinks/yearlinks_competitions\";\r\nimport TableCompetitions from \"./tables/table_competitions\";\r\n\r\nclass Competitions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          API_KEY: localStorage.getItem('apiKey'),\r\n          isLoaded: false,\r\n          competitions: []\r\n        };\r\n    }\r\n\r\n    gettingCompetitions = async(e) => { //get data from API\r\n        const url = new URL(`https://api.football-data.org/v2/competitions`);\r\n        const headers = {'X-Auth-Token': this.state.API_KEY};\r\n        const response = await fetch(url, {headers});\r\n        const data = await response.json();\r\n\r\n        if(!response.ok){\r\n            this.setState ({\r\n                error: data.message \r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: null,\r\n                isLoaded: true,\r\n                competitions: data.competitions\r\n            });\r\n\r\n            const sorted = this.state.competitions.sort((a,b) => { //sorting by start date\r\n                let date = new Date('2000-01-01');\r\n                let aDate, bDate;\r\n                if (!a.currentSeason) aDate = date;\r\n                else aDate = new Date(a.currentSeason.startDate);\r\n                if (!b.currentSeason) bDate = date;\r\n                else bDate = new Date(b.currentSeason.startDate);\r\n                \r\n                return bDate - aDate;\r\n            });\r\n            this.setState({ competitions: sorted });\r\n        }        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gettingCompetitions();\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            \r\n            <form>\r\n                <label htmlFor=\"competitions-search\">Search the competition: </label>\r\n                <input type=\"search\" id=\"competitions-search\" name=\"q\" placeholder=\"Enter competition name\" />\r\n                <button>Search</button>\r\n            </form>\r\n            <YearLinksCompetitions />\r\n            <div>\r\n                <h2>Competitions</h2>\r\n                <TableCompetitions state={this.state} year={this.props.match.params.year} search={this.props.location.search} />\r\n            </div>            \r\n        </div>        \r\n    }\r\n}\r\n\r\nexport default Competitions;","import React from \"react\";\r\n\r\nconst YearLinksTeams = (props) => {\r\n    const Links = [];\r\n    Links.push(<li key=\"current\"><a href={`/teams/${props.id}`}>Current Season</a></li>);\r\n    for (let i = 2021; i >= 2014; i--)\r\n        Links.push(<li key={i}><a href={`/teams/${props.id}/${i}`}>{i}</a></li>);\r\n\r\n    return <ul className=\"year-links\">{Links}</ul>;\r\n}\r\n\r\nexport default YearLinksTeams;","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TableTeams = (props) => {\r\n    let filtered = props.state.teams.slice();\r\n    const isLoaded = props.state.isLoaded;\r\n    const error = props.state.error;\r\n    const params = new URLSearchParams(props.search);\r\n    const q = params.get('q');\r\n\r\n    if(q) {  // search query filtration\r\n        filtered = props.state.teams.filter(team => team.name.includes(q));\r\n    }\r\n\r\n    if (error)\r\n        return <div>{`An error occured: ${error}`}</div>;\r\n    if (!isLoaded) {\r\n        return <div>Loading...<br/>Try to reload in minute if stays. If doesn't work, check your API token.</div>;\r\n    } else if (filtered.length) \r\n        return (\r\n            <table cellSpacing=\"0\" className=\"table\">\r\n                <thead>\r\n                    <tr key=\"th-row\">\r\n                        <th>№</th>\r\n                        <th>Area</th>\r\n                        <th>Name</th>\r\n                        <th>Venue</th>\r\n                        <th>Website</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {filtered.map((team, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{team.area.name}</td>\r\n                            <td>\r\n                                <span>{team.name}</span>\r\n                                <br />\r\n                                <NavLink to={`/team/${team.id}`}>Calendar</NavLink>\r\n                            </td>\r\n                            <td>{team.venue}</td>\r\n                            <td>{team.website}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    else return <div>No information with parameters given.</div>\r\n}\r\n\r\nexport default TableTeams;","import React from \"react\";\r\nimport YearLinksTeams from \"./yearlinks/yearlinks_teams\";\r\nimport TableTeams from \"./tables/table_teams\";\r\n\r\nclass Teams extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          API_KEY: localStorage.getItem('apiKey'),\r\n          isLoaded: false,\r\n          teams: [],\r\n          competition: null\r\n        };\r\n    }\r\n\r\n    gettingTeams = async(e) => { //get data from API\r\n        const id = this.props.match.params.id;\r\n        const year = this.props.match.params.year;\r\n\r\n        const id_param = `/${id}`;\r\n        const year_param = year? `?season=${year}` : \"\";\r\n\r\n        const url = new URL(`https://api.football-data.org/v2/competitions${id_param}/teams${year_param}`);\r\n        const headers = {'X-Auth-Token': this.state.API_KEY};\r\n        const response = await fetch(url, {headers});\r\n        const data = await response.json();\r\n\r\n        if(!response.ok){\r\n            this.setState ({\r\n                error: data.message\r\n             });\r\n        }\r\n\r\n        else this.setState({\r\n            error: null,\r\n            isLoaded: true,\r\n            teams: data.teams,\r\n        });\r\n\r\n        const url_competition = new URL(`https://api.football-data.org/v2/competitions${id_param}`); //to display competition name in any case\r\n        const response_comp = await fetch(url_competition, {headers});\r\n        const data_comp = await response_comp.json();\r\n\r\n        if(response_comp.ok){\r\n            this.setState ({\r\n                competition: data_comp.name\r\n             });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gettingTeams();\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <YearLinksTeams id={this.props.match.params.id}/>\r\n            <form>\r\n                <label htmlFor=\"teams-search\">Search the team: </label>\r\n                <input type=\"search\" id=\"teams-search\" name=\"q\" placeholder=\"Enter team name\" />\r\n                <button>Search</button>\r\n            </form>\r\n            {this.state.competition? <h2>{`${this.state.competition} Teams`}</h2> : null}\r\n            <TableTeams state={this.state} search={this.props.location.search}/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Teams;","import React from \"react\";\r\n\r\nconst YearLinksTeam = (props) => {\r\n    const Links = [];\r\n    Links.push(<li key=\"current\"><a href={`/team/${props.id}`}>Current Season</a></li>);\r\n    for (let i = 2021; i >= 1990; i--)\r\n        Links.push(<li key={i}><a href={`/team/${props.id}?dateFrom=${i}-01-01&dateTo=${i}-12-31`}>{i}</a></li>);\r\n\r\n    return <ul className=\"year-links\">{Links}</ul>;\r\n}\r\n\r\nexport default YearLinksTeam;","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TableTeam = (props) => {\r\n    const matches = props.state.matches;\r\n    const isLoaded = props.state.isLoaded;\r\n    const error = props.state.error;\r\n\r\n    if (error)\r\n        return <div>{`An error occured: ${error}`}</div>;\r\n    if (!isLoaded) {\r\n        return <div>Loading...<br/>Try to reload in minute if stays. If doesn't work, check your API token.</div>;\r\n    } else if (matches.length) \r\n        return (\r\n            <table  cellSpacing=\"0\" className=\"table\">\r\n                <thead>\r\n                    <tr key=\"th-row\">\r\n                        <th>№</th>\r\n                        <th>Area</th>\r\n                        <th>Competition</th>\r\n                        <th>Home Team</th>\r\n                        <th>Away Team</th>\r\n                        <th>Local Date</th>\r\n                        <th>Status</th>\r\n                        <th>Winner</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {matches.map((match, index) => {\r\n                        const date = new Date(match.utcDate).toLocaleString();\r\n                        return <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{match.competition.area.name}</td>\r\n                            <td>\r\n                                <span>{match.competition.name}</span>\r\n                                <br />\r\n                                <NavLink to={`/competition/${match.competition.id}`}>Calendar</NavLink>\r\n                            </td>\r\n                            <td>{match.homeTeam.name}</td>\r\n                            <td>{match.awayTeam.name}</td>\r\n                            <td>{date}</td>\r\n                            <td className=\"td-status\">{match.status}</td>\r\n                            <td className=\"td-winner\">{match.score.winner? match.score.winner: \"-\"}</td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    else return <div>No information with parameters given.</div>\r\n}\r\n\r\nexport default TableTeam;","import React from \"react\";\r\n\r\nconst FormDates = () => {\r\n    return <form className=\"form-dates\">\r\n        <p>Search Dates:</p>\r\n\r\n        <label htmlFor=\"dateFrom\" >Date From: </label>\r\n        <input type=\"date\" id=\"dateFrom\" name=\"dateFrom\" required />\r\n\r\n        <label htmlFor=\"dateTo\">Date To: </label>\r\n        <input type=\"date\" id=\"dateTo\" name=\"dateTo\" required />\r\n\r\n        <button type=\"submit\">Search</button>\r\n    </form>\r\n}\r\n\r\nexport default FormDates;","import React from \"react\";\r\nimport YearLinksTeam from \"./yearlinks/yearlinks_team\";\r\nimport TableTeam from \"./tables/table_team\";\r\nimport FormDates from \"./form_dates\";\r\n\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          API_KEY: localStorage.getItem('apiKey'),\r\n          isLoaded: false,\r\n          matches: [],\r\n          name: null\r\n        };\r\n    }\r\n\r\n    gettingMatches = async(e) => {\r\n        const id = this.props.match.params.id;\r\n        const id_param = `/${id}`;\r\n\r\n        const search = this.props.location.search;\r\n\r\n        const url = new URL(`https://api.football-data.org/v2/teams${id_param}/matches${search}`);\r\n        const headers = {'X-Auth-Token': this.state.API_KEY};\r\n        const response = await fetch(url, {headers});\r\n        const data = await response.json();\r\n\r\n        if(!response.ok){\r\n            this.setState ({\r\n                error: data.message\r\n            });\r\n        }\r\n\r\n        else this.setState({\r\n            error: null,\r\n            isLoaded: true,\r\n            matches: data.matches\r\n        });\r\n\r\n        const sorted = this.state.matches.sort((a,b) => { //sorting by start date\r\n            let aDate = new Date(a.utcDate);\r\n            let bDate = new Date(b.utcDate);\r\n            \r\n            return bDate - aDate;\r\n        });\r\n        this.setState({ matches: sorted });\r\n\r\n        const url_team = new URL(`https://api.football-data.org/v2/teams${id_param}`); //to display team name in any case\r\n        const response_team = await fetch(url_team, {headers});\r\n        const data_team = await response_team.json();\r\n\r\n        if(response_team.ok){\r\n            this.setState ({\r\n                name: data_team.name\r\n             });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gettingMatches();\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <YearLinksTeam id={this.props.match.params.id}/>\r\n            <FormDates />\r\n            {this.state.name? <h2>{`${this.state.name} Team Matches Calendar`}</h2> : null}\r\n            <TableTeam state={this.state}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Team;","import React from \"react\";\r\n\r\nconst YearLinksCompetition = (props) => {\r\n    const Links = [];\r\n    Links.push(<li key=\"all\"><a href={`/competition/${props.id}`}>Current Season</a></li>);\r\n    for (let i = 2021; i > 2014; i--)\r\n        Links.push(<li key={i}><a href={`/competition/${props.id}/${i}`}>{i}</a></li>);\r\n    Links.push(<li key=\"earlier\"><a href={`/competition/${props.id}?dateFrom=2010-01-01&dateTo=2014-12-31`}>Under 2014</a></li>);\r\n\r\n    return <ul className=\"year-links\">{Links}</ul>;\r\n}\r\n\r\nexport default YearLinksCompetition;","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TableCompetition = (props) => {\r\n    const matches = props.state.matches;\r\n    const isLoaded = props.state.isLoaded;\r\n    const error = props.state.error;\r\n\r\n    if (error)\r\n        return <div>{`An error occured: ${error}`}</div>;\r\n    if (!isLoaded) {\r\n        return <div>Loading...<br/>Try to reload in minute if stays. If doesn't work, check your API token.</div>;\r\n    } else if (matches.length) \r\n        return (\r\n            <table cellSpacing=\"0\" className=\"table\">\r\n                <thead>\r\n                    <tr key=\"th-row\">\r\n                        <th>№</th>\r\n                        <th>Home Team</th>\r\n                        <th>Away Team</th>\r\n                        <th>Local Date</th>\r\n                        <th>Status</th>\r\n                        <th>Winner</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {matches.map((match, index) => {\r\n                        const date = new Date(match.utcDate).toLocaleString();\r\n                        return <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                                <span>{match.homeTeam.name}</span>\r\n                                <br />\r\n                                <NavLink to={`/team/${match.homeTeam.id}`}>Calendar</NavLink>\r\n                            </td>\r\n                            <td>\r\n                                <span>{match.awayTeam.name}</span>\r\n                                <br />\r\n                                <NavLink to={`/team/${match.awayTeam.id}`}>Calendar</NavLink>\r\n                            </td>\r\n                            <td>{date}</td>\r\n                            <td className=\"td-status\">{match.status}</td>\r\n                            <td className=\"td-winner\">{match.score.winner? match.score.winner: \"-\"}</td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    else return <div>No information with parameters given.</div>\r\n}\r\n\r\nexport default TableCompetition;","import React from \"react\";\r\nimport YearLinksCompetition from \"./yearlinks/yearlinks_competition\";\r\nimport TableCompetition from \"./tables/table_competition\";\r\nimport FormDates from \"./form_dates\";\r\n\r\nclass Competition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          API_KEY: localStorage.getItem('apiKey'),\r\n          isLoaded: false,\r\n          matches: [],\r\n          name: null\r\n        };\r\n    }\r\n\r\n    gettingMatches = async(e) => { //get data from API\r\n        const id = this.props.match.params.id;\r\n        const year = this.props.match.params.year;\r\n\r\n        const id_param = `/${id}`;\r\n        const year_param = year? `?season=${year}` : \"\";\r\n\r\n        const search = this.props.location.search;\r\n        \r\n        const search_param = search? search : year_param;\r\n\r\n        const url = new URL(`https://api.football-data.org/v2/competitions${id_param}/matches${search_param}`);\r\n        const headers = {'X-Auth-Token': this.state.API_KEY};\r\n        const response = await fetch(url, {headers});\r\n        const data = await response.json();\r\n\r\n        if(!response.ok){\r\n            this.setState ({error: data.message });\r\n        }\r\n\r\n        else this.setState({\r\n            error: null,\r\n            isLoaded: true,\r\n            matches: data.matches,\r\n        });\r\n\r\n        const sorted = this.state.matches.sort((a,b) => { //sorting by start date\r\n            let aDate = new Date(a.utcDate);\r\n            let bDate = new Date(b.utcDate);\r\n            \r\n            return bDate - aDate;\r\n        });\r\n        this.setState({ matches: sorted });\r\n\r\n        const url_competition = new URL(`https://api.football-data.org/v2/competitions${id_param}`); //to display competition name in any case\r\n        const response_comp = await fetch(url_competition, {headers});\r\n        const data_comp = await response_comp.json();\r\n\r\n        if(response_comp.ok){\r\n            this.setState ({\r\n                name: data_comp.name\r\n             });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gettingMatches();\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <YearLinksCompetition id={this.props.match.params.id}/>\r\n            <FormDates />\r\n            {this.state.name? <h2>{`${this.state.name} Matches Calendar`}</h2> : null}\r\n            <TableCompetition state={this.state} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Competition;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport Competitions from \"./competitions\";\r\nimport Teams from \"./teams\";\r\nimport Team from \"./team\";\r\nimport Competition from \"./competition\";\r\n\r\nclass Container extends React.Component {\r\n    render () {\r\n        return <div className=\"container\">\r\n                <Router basename=\"/soccer-stat\">\r\n                    <div className=\"top clearfix\">\r\n                        <div className=\"form-api\">\r\n                            <label htmlFor=\"apikey\" >API Token: </label>\r\n                            <input type=\"text\" id=\"apikey\" name=\"apikey\" \r\n                            defaultValue={localStorage.getItem('apiKey')} placeholder=\"Enter valid API Key\" required />\r\n                            <button onClick = {() => {\r\n                                localStorage.clear();\r\n                                localStorage.setItem('apiKey', document.getElementById(\"apikey\").value);\r\n                                document.location.reload();\r\n                            }}>\r\n                                Confirm\r\n                            </button>\r\n                        </div>\r\n\r\n                        <nav>\r\n                            <NavLink to=\"/сompetitions\" className=\"link-home\">All the competitions</NavLink>\r\n                        </nav>                        \r\n                    </div>                                        \r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Competitions} />\r\n                        <Route exact path=\"/сompetitions/:year?\" component={Competitions} />\r\n\r\n                        <Redirect exact from=\"/teams\" to=\"/teams/2000\" />\r\n                        <Route path=\"/teams/:id?/:year?\" component={Teams} />  \r\n\r\n                        <Redirect exact from=\"/competition\" to=\"/competition/2000\" />\r\n                        <Route path=\"/competition/:id?/:year?\" component={Competition} />\r\n\r\n                        <Route path=\"/team/:id\" component={Team} />\r\n                        <Redirect from=\"/team\" to=\"/team/4\" />\r\n\r\n                        <Route children={()=><div>\r\n                                <p>Page does not exist.</p>\r\n                            </div>} />\r\n                    </Switch>\r\n                </Router>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Container;","import React from \"react\";\nimport Header from \"./components/header\";\nimport Container from \"./components/container\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}